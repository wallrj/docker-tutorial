#+TITLE: Docker
#+DATE: 24 March 2015
#+AUTHOR: (an introduction)
#+EMAIL: Richard Wall (@wallrj) <richard@the-moon.net>
#+REVEAL_THEME: night
#+REVEAL_TRANS: linear
#+REVEAL-SLIDE-NUMBER: t
#+REVEAL_ROOT: //cdn.jsdelivr.net/reveal.js/2.5.0/
#+OPTIONS: timestamp:nil author:nil num:nil toc:nil reveal_rolling_links:nil
#+OPTIONS: reveal_history:t
# Remove speaker notes
# awk 'BEGIN {skip=0} /^#\+BEGIN_NOTES/ { skip=1 } /^#\+END_NOTES/ {skip=0; next;} {if(skip==0) print $0}'

* Preview
  * Recap
  * Install tutorial environment
  * What is Docker?
  * Try it
  * A simple web server
  * Next steps
  * Questions?

* Recap

* Virtual Machines
  * https://en.wikipedia.org/wiki/Virtual_machine

* VirtualBox / VMWare

* System Virtual Machines (Hardware virtualisation)
  * Emulate foreign hardware environments
  * Have their own kernels

* Vagrant

  Vagrant allows you to "Create and configure lightweight, reproducible, and portable development environments."

  * https://www.vagrantup.com/
  * `vagrant up`

  "Provisioners in Vagrant allow you to automatically install software, alter configurations, and more on the machine as part of the vagrant up process."

  *  http://docs.vagrantup.com/v2/provisioning/

* Server provisioning
  * OS installation
  * Storage set up
  * Network set up
  * Install packages
  * Upgrade packages
  * https://en.wikipedia.org/wiki/Provisioning#Server_provisioning

* Configuration management
  * Puppet
  * Chef
  * https://en.wikipedia.org/wiki/Configuration_management#Operating_System_configuration_management

* Preparations

* Identify experts
  * Vagrant / Docker experts please standup

* Software

  * **Git**: http://git-scm.com/downloads
  * **VirtualBox**: https://www.virtualbox.org
  * **Vagrant**: https://docs.vagrantup.com/v2/installation

* Start the tutorial environment

  ```
  git clone https://github.com/wallrj/docker-tutorial.git
  cd docker-tutorial
  vagrant up
  ```

* What is Docker?

  Docker is an open platform for developers and sysadmins to build, ship, and
  run distributed applications. Consisting of Docker Engine, a portable,
  lightweight runtime and packaging tool, and Docker Hub, a cloud service for
  sharing applications and automating workflows, Docker enables apps to be
  quickly assembled from components and eliminates the friction between
  development, QA, and production environments. As a result, IT can ship faster
  and run the same app, unchanged, on laptops, data center VMs, and any cloud.

  * https://www.docker.com/whatisdocker/

* Operating-system-level virtualization
  * Containers share the same kernel as the host.
  * Low overhead, because
  * programs in virtual partitions use the operating system's normal system call interface and
  * do not need to be subjected to emulation or
  * be run in an intermediate virtual machine,
  * as is the case with whole-system virtualizers (such as VMware ESXi, QEMU or Hyper-V) and paravirtualizers (such as Xen or UML).
  * This form of virtualization also does not require support in hardware to perform efficiently.

  https://en.wikipedia.org/wiki/Operating-system-level_virtualization

* Docker Terminology
  * Container
  * Dockerfile
  * Entrypoint
  * Images
  * Layers
  * Copy-on-write
  * Pull
  * Expose ports
  * Volumes
  * Links

* Docker Components
  * Docker daemon
  * Docker client
  * Docker hub

* Docker Tutorial (30 minutes)
  * https://www.docker.com/tryit/

* Summary of commands so far

* `docker version`

* `docker search`

* `docker pull`

* `docker run`

* `docker ps`

* `docker commit`

* `docker run learn/ping`

* `docker inspect`

* `docker push`

* Docker Development Environment

* Log in

  * vagrant up (may already be complete)
  * vagrant ssh (does this work on windows?)

* Demonstrate barebones system

  Neither Apache or PHP present on tutorial VM!

  ```
  vagrant@docker-tutorial:~$ php
  The program 'php' is currently not installed. You can install it by typing:
  sudo apt-get install php5-cli
  ```

  ```
  vagrant@docker-tutorial:~$ apache
  No command 'apache' found, did you mean:
   Command 'apache2' from package 'apache2-bin' (main)
  apache: command not found
  ```

* Start a webserver in a Docker container
  * docker run -d -p 80 tutum/apache-php
  * docker ps

    (note the port)

* Access webserver from laptop

  * http://172.16.255.250:<PORT>

* Start a container with a fixed port

  * docker run -d -p 8080:80 tutum/apache-php
  * docker ps

* Access webserver from laptop

  * http://172.16.255.250:8080

* Serve a custom page
  * docker run -d -p 8082:80 -v /vagrant/sample1:/app  tutum/apache-php

* Explanation
  * Container configured to serve files in /app
  * https://registry.hub.docker.com/u/tutum/apache-php/dockerfile/

  # Explain /vagrant shared directory between laptop and virtual machine
  # Explain Dockerfile

* Next Steps

* Install Docker on your laptop
  https://docs.docker.com/installation/#installation

* Register at Docker Hub
  https://hub.docker.com/

  * Sign up with GitHub

* Challenges
  * Use `compose` to bring up a microservice application.
  * Dockerize a clojure application.

* Summary

* Questions?

* Thanks
  * Mix Radio: https://github.com/mixradio
  * Katja Durrani: https://github.com/katjad
  * Carl Hughes: https://github.com/codekipple
  * Kai Davenport: https://github.com/binocarlos
  * Richard Wall: https://github.com/wallrj
  * ClusterHQ: https://github.com/ClusterHQ
